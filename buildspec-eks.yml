version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: 282835178041 
    IMAGE_REPO_NAME: hello
    EKS_CLUSTER: hello1

phases: 
  install: 
    runtime-versions: 
      docker: 18 
  pre_build: 
    commands: 
      - env
      - echo $IMAGE_TAG
      - echo Logging in to Amazon ECR... 
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION) 
      - echo Getting kubeconfig info to connect to Amazon EKS... 
      - aws eks --region eu-west-3 update-kubeconfig --name $EKS_CLUSTER
      - kubectl get svc
  build: 
    commands: 
      - echo Build started on `date` 
      - echo Building the Docker image...           
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG . 
      - echo docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG   
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG       
  post_build: 
    commands: 
      - echo Build completed on `date` 
      - echo Pushing the Docker image... 
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - printf '[{"name":"hello","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json
      - kubectl get pod
      - kubectl apply -f hello.yml
      - kubectl rollout restart deploy/hello
      - kubectl get all
artifacts:
    files: imagedefinitions.json
    